<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BotCore</name>
    </assembly>
    <members>
        <member name="T:BotCore.Publication.Busqueda">
            <summary>
            Un service provider, que filtra las publicaciones a partir de ciertas condiciones dadas.
            </summary>
        </member>
        <member name="T:BotCore.Publication.Busqueda.FiltrosPosibles">
            <summary>
            Los filtros competentes para las busquedas, corresponden con propiedades
            principales de <see cref ="T:ClassLibrary.Publication.Publicacion"/> y su subclase <see cref ="T:ClassLibrary.Publication.PublicacionRecurrente"/>.
            </summary>
        </member>
        <member name="F:BotCore.Publication.Busqueda.FiltrosPosibles.Empresa">
            Filtro de tipo empresa.
        </member>
        <member name="F:BotCore.Publication.Busqueda.FiltrosPosibles.Residuo">
            Filtro de tipo residuo.
        </member>
        <member name="F:BotCore.Publication.Busqueda.FiltrosPosibles.LugarRetiro">
            Filtro de donde se debe retirar.
        </member>
        <member name="F:BotCore.Publication.Busqueda.FiltrosPosibles.PrecioMaximo">
            Filtro del precio maximo dispuesto a pagar.
        </member>
        <member name="F:BotCore.Publication.Busqueda.FiltrosPosibles.FrecuenciaRestock">
            Filtro de de restock para publicaciones recurrentes.
        </member>
        <member name="F:BotCore.Publication.Busqueda.FiltrosPosibles.Categorias">
            Filtro segun categoria
        </member>
        <member name="P:BotCore.Publication.Busqueda.Instancia">
            <summary>
            Da acceso al singelton de la Busqueda.
            </summary>
            <value>Instancia de Busqueda.</value>
        </member>
        <member name="M:BotCore.Publication.Busqueda.BuscarPublicaciones(System.Collections.Generic.Dictionary{BotCore.Publication.Busqueda.FiltrosPosibles,System.Object})">
            <summary>
            Servicio principal de la busqueda.
            </summary>
            <param name="publicacionesASeparar">Un diccionario de clave un miembro del enum de FiltrosPosibles y valor la especificacion deseada (string o int).</param>
            <returns>Una List de publicaciones que cumplen las condiciones de PublicacionesASeparar.</returns>
        </member>
        <member name="T:BotCore.Publication.Filters.FiltroPorCategoria">
            <summary>
            Clase que se encarga de filtrar las distintas publicaciones por categoría.
            </summary>
        </member>
        <member name="P:BotCore.Publication.Filters.FiltroPorCategoria.Next">
            <summary>
            Obtiene el siguiente filtro de búsqueda.
            </summary>
            <value>IFiltroBusqueda.</value>
        </member>
        <member name="M:BotCore.Publication.Filters.FiltroPorCategoria.#ctor(ClassLibrary.Publication.Categoria,BotCore.Publication.Filters.IFiltroBusqueda)">
            <summary>
            Método que recibe el tipo de filtro y el siguiente filtro de búsqueda.
            </summary>
            <param name="categoria"><see cref = "T:ClassLibrary.Publication.Categoria"/>.</param>
            <param name="next"><see cref = "T:BotCore.Publication.Filters.IFiltroBusqueda"/>.</param>
        </member>
        <member name="M:BotCore.Publication.Filters.FiltroPorCategoria.Filtrar(System.Collections.Generic.List{ClassLibrary.Publication.Publicacion})">
            <summary>
            Método que retorna las publicaciones que coinciden con el filtro aplicado.
            </summary>
            <param name="publicaciones"></param>
            <returns></returns>
        </member>
        <member name="T:BotCore.Publication.Filters.FiltroPorEmpresa">
            <summary>
            Clase que se encarga de filtrar las distintas publicaciones la empresa publicadora.
            </summary>
        </member>
        <member name="P:BotCore.Publication.Filters.FiltroPorEmpresa.Next">
            <summary>
            Obtiene el siguiente filtro de búsqueda.
            </summary>
            <value>IFiltroBusqueda.</value>
        </member>
        <member name="M:BotCore.Publication.Filters.FiltroPorEmpresa.#ctor(ClassLibrary.User.Empresa,BotCore.Publication.Filters.IFiltroBusqueda)">
            <summary>
            Método que recibe el tipo de filtro y el siguiente filtro de búsqueda.
            </summary>
            <param name="empresa"><see cref = "T:ClassLibrary.User.Empresa"/>.</param>
            <param name="next"><see cref = "T:BotCore.Publication.Filters.IFiltroBusqueda"/>.</param>
        </member>
        <member name="M:BotCore.Publication.Filters.FiltroPorEmpresa.Filtrar(System.Collections.Generic.List{ClassLibrary.Publication.Publicacion})">
            <summary>
            Método que retorna las publicaciones que coinciden con el filtro aplicado.
            </summary>
            <param name="publicaciones"></param>
            <returns></returns>
        </member>
        <member name="T:BotCore.Publication.Filters.FiltroPorFrecuenciaRestock">
            <summary>
            Clase que se encarga de filtrar las distintas publicaciones por frecuencia de restock.
            </summary>
        </member>
        <member name="P:BotCore.Publication.Filters.FiltroPorFrecuenciaRestock.Next">
            <summary>
            Obtiene el siguiente filtro de búsqueda.
            </summary>
            <value>IFiltroBusqueda.</value>
        </member>
        <member name="M:BotCore.Publication.Filters.FiltroPorFrecuenciaRestock.#ctor(ClassLibrary.Publication.PublicacionRecurrente,BotCore.Publication.Filters.IFiltroBusqueda)">
            <summary>
            Método que recibe el tipo de filtro y el siguiente filtro de búsqueda.
            </summary>
            <param name="frecuencia"><see cref = "T:ClassLibrary.Publication.PublicacionRecurrente"/>.</param>
            <param name="next"><see cref = "T:BotCore.Publication.Filters.IFiltroBusqueda"/>.</param>
        </member>
        <member name="M:BotCore.Publication.Filters.FiltroPorFrecuenciaRestock.Filtrar(System.Collections.Generic.List{ClassLibrary.Publication.Publicacion})">
            <summary>
            Método que retorna las publicaciones que coinciden con el filtro aplicado.
            </summary>
            <param name="publicaciones"></param>
            <returns></returns>
        </member>
        <member name="T:BotCore.Publication.Filters.FiltroPorLugarRetiro">
            <summary>
            Clase que se encarga de filtrar las distintas publicaciones por lugar de retiro.
            </summary>
        </member>
        <member name="P:BotCore.Publication.Filters.FiltroPorLugarRetiro.Next">
            <summary>
            Obtiene el siguiente filtro de búsqueda.
            </summary>
            <value>IFiltroBusqueda.</value>
        </member>
        <member name="M:BotCore.Publication.Filters.FiltroPorLugarRetiro.#ctor(ClassLibrary.Publication.Publicacion,BotCore.Publication.Filters.IFiltroBusqueda)">
            <summary>
            Método que recibe el tipo de filtro y el siguiente filtro de búsqueda.
            </summary>
            <param name="lugarRetiro"><see cref = "T:ClassLibrary.Publication.Publicacion"/>.</param>
            <param name="next"><see cref = "T:BotCore.Publication.Filters.IFiltroBusqueda"/>.</param>
        </member>
        <member name="M:BotCore.Publication.Filters.FiltroPorLugarRetiro.Filtrar(System.Collections.Generic.List{ClassLibrary.Publication.Publicacion})">
            <summary>
            Método que retorna las publicaciones que coinciden con el filtro aplicado.
            </summary>
            <param name="publicaciones"></param>
            <returns></returns>
        </member>
        <member name="T:BotCore.Publication.Filters.FiltroPorPrecioMaximo">
            <summary>
            Clase que se encarga de filtrar las distintas publicaciones por precio máximo.
            </summary>
        </member>
        <member name="P:BotCore.Publication.Filters.FiltroPorPrecioMaximo.Next">
            <summary>
            Obtiene el siguiente filtro de búsqueda.
            </summary>
            <value>IFiltroBusqueda.</value>
        </member>
        <member name="M:BotCore.Publication.Filters.FiltroPorPrecioMaximo.#ctor(ClassLibrary.Publication.Publicacion,BotCore.Publication.Filters.IFiltroBusqueda)">
            <summary>
            Método que recibe el tipo de filtro y el siguiente filtro de búsqueda.
            </summary>
            <param name="referencia"><see cref = "T:ClassLibrary.Publication.Publicacion"/>.</param>
            <param name="next"><see cref = "T:BotCore.Publication.Filters.IFiltroBusqueda"/>.</param>
        </member>
        <member name="M:BotCore.Publication.Filters.FiltroPorPrecioMaximo.Filtrar(System.Collections.Generic.List{ClassLibrary.Publication.Publicacion})">
            <summary>
            Método que retorna las publicaciones que coinciden con el filtro aplicado.
            </summary>
            <param name="publicaciones"></param>
            <returns></returns>
        </member>
        <member name="T:BotCore.Publication.Filters.FiltroPorResiduo">
            <summary>
            Clase que se encarga de filtrar las distintas publicaciones por tipo de residuo.
            </summary>
        </member>
        <member name="P:BotCore.Publication.Filters.FiltroPorResiduo.Next">
            <summary>
            Obtiene el siguiente filtro de búsqueda.
            </summary>
            <value>IFiltroBusqueda.</value>
        </member>
        <member name="M:BotCore.Publication.Filters.FiltroPorResiduo.#ctor(ClassLibrary.Publication.Residuo,BotCore.Publication.Filters.IFiltroBusqueda)">
            <summary>
            Método que recibe el tipo de filtro y el siguiente filtro de búsqueda.
            </summary>
            <param name="residuo"><see cref = "T:ClassLibrary.Publication.Residuo"/>.</param>
            <param name="next"><see cref = "T:BotCore.Publication.Filters.IFiltroBusqueda"/>.</param>
        </member>
        <member name="M:BotCore.Publication.Filters.FiltroPorResiduo.Filtrar(System.Collections.Generic.List{ClassLibrary.Publication.Publicacion})">
            <summary>
            Método que retorna las publicaciones que coinciden con el filtro aplicado.
            </summary>
            <param name="publicaciones"></param>
            <returns></returns>
        </member>
        <member name="T:BotCore.Publication.Filters.IFiltroBusqueda">
            <summary>
            Interfaz que unifica tipos cuyo objetivo es devolver texto al bot para imprimir
            y retornar al usuario.
            </summary>
        </member>
        <member name="P:BotCore.Publication.Filters.IFiltroBusqueda.Next">
            <summary>
            Obtiene el siguiente filtro de búsqueda.
            </summary>
            <value></value>
        </member>
        <member name="M:BotCore.Publication.Filters.IFiltroBusqueda.Filtrar(System.Collections.Generic.List{ClassLibrary.Publication.Publicacion})">
            <summary>
            
            </summary>
            <param name="publicaciones"></param>
            <returns></returns>
        </member>
        <member name="T:BotCore.Publication.Publicador">
            <summary>
            Clase creadora de instancias y persistidora de publicación.
            </summary>
        </member>
        <member name="P:BotCore.Publication.Publicador.Instancia">
            <summary>
            Obtiene la instancia del Singleton.
            </summary>
            <value><see cref = "T:BotCore.Publication.Publicador"/>.</value>
        </member>
        <member name="M:BotCore.Publication.Publicador.PublicarOferta(ClassLibrary.Publication.Residuo,System.Double,System.String,System.Int32,System.String,ClassLibrary.User.Empresa,System.String,ClassLibrary.Publication.Categoria)">
            <summary>
            Crea y persiste en memoria la publicación.
            </summary>
            <param name="residuo"><see cref = "T:ClassLibrary.Publication.Residuo"/>.</param>
            <param name="precioUnitario"><see langword = "double"/>.</param>
            <param name="moneda"><see langword = "string"/>.</param>
            <param name="cantidad"><see langword = "int"/>.</param>
            <param name="lugarRetiro"><see langword = "string"/>.</param>
            <param name="vendedor"><see cref = "T:ClassLibrary.User.Empresa"/>.</param>
            <param name="descripcion"><see langword = "string"/>.</param>
            <param name="categoria"><see langword = "string"/>.</param>
        </member>
        <member name="M:BotCore.Publication.Publicador.PublicarOfertaRecurrente(ClassLibrary.Publication.Residuo,System.Double,System.String,System.Int32,System.String,ClassLibrary.User.Empresa,System.String,ClassLibrary.Publication.Categoria,System.Int32)">
            <summary>
            Crea y persiste en memoria una nueva publicación recurrente.
            </summary>
            <param name="residuo"><see cref = "T:ClassLibrary.Publication.Residuo"/>.</param>
            <param name="precioUnitario"><see langword = "double"/>.</param>
            <param name="moneda"><see langword = "string"/>.</param>
            <param name="cantidad"><see langword = "int"/>.</param>
            <param name="lugarRetiro"><see langword = "string"/>.</param>
            <param name="vendedor"><see cref = "T:ClassLibrary.User.Empresa"/>.</param>
            <param name="descripcion"><see langword = "string"/>.</param>
            <param name="categoria"><see langword = "string"/>.</param>
            <param name="frecuenciaAnualRestock"><see langword = "int"/>.</param>
        </member>
        <member name="T:BotCore.Publication.Reporte">
            <summary>
            Genera un reporte del historial de un <see iref ="IUsuario"/>, implementa la interfaz <see iref ="IPrintable"/>.
            </summary>
        </member>
        <member name="P:BotCore.Publication.Reporte.FechaInicio">
            <summary>
            Propiedad readonly de <see cref ="T:BotCore.Publication.Reporte"/>.
            </summary>
            <value>instancia de <see cref ="T:System.DateTime"/>. </value>
        </member>
        <member name="P:BotCore.Publication.Reporte.FechaFin">
            <summary>
            Propiedad readonly de <see cref ="T:BotCore.Publication.Reporte"/>.
            </summary>
            <value>instancia de <see cref ="T:System.DateTime"/>. </value>.
        </member>
        <member name="P:BotCore.Publication.Reporte.Ventas">
            <summary>
            Propiedad readonly de <see cref ="T:BotCore.Publication.Reporte"/>.
            </summary>
            <value>Lista de instancias de <see cref ="T:ClassLibrary.Publication.Venta"/>. </value>
        </member>
        <member name="P:BotCore.Publication.Reporte.Usuario">
            <summary>
            Propiedad readonly de <see cref ="T:BotCore.Publication.Reporte"/>.
            </summary>
            <value>instancia del tipo <see iref ="IUsuario"/>. </value>
        </member>
        <member name="M:BotCore.Publication.Reporte.Generar(System.DateTime,System.DateTime,ClassLibrary.User.IUsuario)">
            <summary>
            Metodo estatico que genera una instancia de <see cref ="T:BotCore.Publication.Reporte"/> para el <see iref ="IUsuario"/>
            especificado en un periodo de tiempo.
            </summary>
            <param name="fechaInicio"><see cref ="T:System.DateTime"/>.</param>
            <param name="fechaFin"><see cref ="T:System.DateTime"/>.</param>
            <param name="usuario"><see iref ="IUsuario"/>.</param>
            <returns> <see cref ="T:BotCore.Publication.Reporte"/>. </returns>
        </member>
        <member name="M:BotCore.Publication.Reporte.GetTextToPrint">
            <summary>
            Implementacion de <see iref ="IPrintable"/>.
            </summary>
            <returns><see langword ="string"/>.</returns>
        </member>
        <member name="T:BotCore.Publication.Transacciones">
            <summary>
            Clase encargada de persistir y confirmar las compras una vez hechas.
            </summary>
        </member>
        <member name="P:BotCore.Publication.Transacciones.Instancia">
            <summary>
            Obtiene la instancia del Singleton.
            </summary>
            <value><see cref = "T:BotCore.Publication.Transacciones"/>.</value>
        </member>
        <member name="M:BotCore.Publication.Transacciones.ConcretarVenta(ClassLibrary.Publication.Venta)">
            <summary>
            Confirma la compra y la persiste.
            </summary>
            <param name="venta"><see cref = "T:ClassLibrary.Publication.Venta"/>.</param>
        </member>
        <member name="T:BotCore.User.Autenticacion">
            <summary>
            Esta clase se encarga de tomar datos para loggear una persona y verificar
            su informacion a la hora de iniciar sesión.
            </summary>
        </member>
        <member name="P:BotCore.User.Autenticacion.Instancia">
            <summary>
            Metodo de acceso al singleton.
            </summary>
            <value></value>
        </member>
        <member name="M:BotCore.User.Autenticacion.ValidarUsuario(System.String,System.String,ClassLibrary.User.IUsuario@)">
            <summary>
            Metodo que toma colaboracion de <see cref = "T:Importers.DataAccess"/> para comprobar el inicio de
            sesión.
            </summary>
            <param name="nombreUsuario"></param>
            <param name="contrasenia"></param>
            <returns><c>true</c> si nombreUsuario y contrasenia están viculados en
            <see cref = "T:ClassLibrary.User.DatosLogin"/> en la base de datos.</returns>
        </member>
        <member name="T:BotCore.User.GestorInvitaciones">
            <summary>
            Clase que se encarga de generar usuarios temporales y
            enviarselo a personas para facilitar su registro
            de manera personal.
            </summary>
        </member>
        <member name="P:BotCore.User.GestorInvitaciones.Instancia">
            <summary>
            Metodo de acceso al singleton.
            </summary>
            <value><see cref = "T:BotCore.User.GestorInvitaciones"/>.</value>
        </member>
        <member name="F:BotCore.User.GestorInvitaciones.InvitacionesEnviadas">
            <summary>
            Lista donde se almacenan las invitaciones enviadas para mantener un registro.
            </summary>
        </member>
        <member name="M:BotCore.User.GestorInvitaciones.AlmacenarInvitacion``1(System.String)">
            <summary>
            Metodo que crea la <see cref = "T:ClassLibrary.User.Invitacion"/> y la envia al destinatario especificado.
            </summary>
            <param name="destinatario">El contacto objetivo (username).</param>
            <param name="nombreTemp">Nombre placeholder para el IUsuario, el destinatario lo sobreescribirá luego.</param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:BotCore.User.GestorInvitaciones.ValidarInvitacion(System.String,ClassLibrary.User.Invitacion@)">
            <summary>
            Metodo utilizado para validar que la invitación fue aceptada. Es utilizado
            externamente por <see cref = "!:MessageGateway"/>.
            </summary>
            <param name="token"><see langword = "string"/>.</param>
            <returns><see cref = "T:ClassLibrary.User.Invitacion"/>.</returns>
        </member>
        <member name="T:BotCore.User.RegistroUsuario">
            <summary>
            Clase encargada de crear el usuario para inicio de sesión y su almacen en
            <see cref = "T:Importers.DataAccess"/>.
            </summary>
        </member>
        <member name="M:BotCore.User.RegistroUsuario.RegistrarUsuario``1(System.String,System.String,``0)">
            <summary>
            Método registrador de usuario.
            </summary>
            <param name="nombreUsuario"></param>
            <param name="contrasenia"></param>
            <param name="usuario"></param>
        </member>
    </members>
</doc>
