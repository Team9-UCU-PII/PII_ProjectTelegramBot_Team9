digraph "MessageGateway.IGateway"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{MessageGateway.IGateway\n|+ Instancia\l+ ObtenerLinkInvitacion\l|+ EnviarMensaje()\l+ EnviarUbicacionEnMapa()\l+ ObtenerFormularioActual()\l+ CambiarFormulario()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Interfaz que engloba las diferentes salidas y entradas posibles de mensaje de invitación al bot (mail..."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{MessageGateway.GatewayBase\n|+ ObtenerLinkInvitacion\l# startupTime\l|+ EnviarMensaje()\l+ EnviarUbicacionEnMapa()\l+ CrearConversacion()\l+ ObtenerFormularioActual()\l+ CambiarFormulario()\l# GatewayBase()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMessageGateway_1_1GatewayBase.html",tooltip="Clase base que al implementar la interfaz IGateway sigue el principio de inversión de dependencias."];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{MessageGateway.Adaptador\lTelegram\n|+ TelegramBot\l+ instancia\l+ Instancia\l+ ObtenerLinkInvitacion\l+ Conversaciones\l|+ EnviarMensaje()\l+ EnviarUbicacionEnMapa()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMessageGateway_1_1AdaptadorTelegram.html",tooltip="Esta clase instanciaría el chat y bot, y almacenaría mensaje por mensaje que va recibiendo como strin..."];
}
