digraph "ClassLibrary.User.Empresa"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{ClassLibrary.User.Empresa\n|+ Nombre\l+ DatosLogin\l|+ Empresa()\l+ Empresa()\l+ Empresa()\l+ CrearOferta()\l+ CrearOfertaRecurrente()\l+ JsonSave()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Clase representativa de las empresas registradas y su información competente."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{JsonConvertibleBase\n|+ SerializationID\l|+ JsonSave()\l+ operator==()\l+ operator!=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classImporters_1_1Json_1_1JsonConvertibleBase.html",tooltip="Clase base abstracta que redefine los operadores == y != para determinar si dos objetos son iguales e..."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{IJsonConvertible\n|+ SerializationID\l|+ JsonSave()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfaceImporters_1_1Json_1_1IJsonConvertible.html",tooltip="Interfaz que permite a la librería de clases marcar las clases que se persisten en formato JSON...."];
  Node4 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{IPersistible\n||}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfaceImporters_1_1IPersistible.html",tooltip="Identifica las clases que se espera que la base de datos persista."];
  Node5 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{IUsuario\n|+ DatosLogin\l+ Nombre\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$interfaceClassLibrary_1_1User_1_1IUsuario.html",tooltip="Interfaz que engloba tanto empresas como emprendimientos."];
  Node3 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +Contacto\n+Descripcion\n+PalabrasClave\n+Rubro" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{string\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +Historial" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{List\< Venta \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" +Lugar" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{ClassLibrary.LocationAPI.\lLocation\n|+ Found\l+ AddresLine\l+ CountryRegion\l+ FormattedAddress\l+ Locality\l+ PostalCode\l+ Latitude\l+ Longitude\l|+ operator==()\l+ operator!=()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classClassLibrary_1_1LocationAPI_1_1Location.html",tooltip="Representa las coordenadas y otros datos de la ubicación de una dirección retornada en el método...."];
}
