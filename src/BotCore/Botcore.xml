<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Botcore</name>
    </assembly>
    <members>
        <member name="T:BotCore.Publication.Busqueda">
            <summary>
            Un service provider, que filtra las publicaciones a partir de ciertas condiciones dadas.
            </summary>
        </member>
        <member name="P:BotCore.Publication.Busqueda.Instancia">
            <summary>
            Da acceso al singelton de la Busqueda.
            </summary>
            <value>Instancia de Busqueda</value>
        </member>
        <member name="T:BotCore.Publication.Busqueda.FiltrosPosibles">
            <summary>
            Los filtros competentes para las busquedas, corresponden con propiedades
            principales de <see cref ="T:ClassLibrary.Publication.Publicacion"/> y su subclase <see cref ="T:ClassLibrary.Publication.PublicacionRecurrente"/>.
            </summary>
        </member>
        <member name="F:BotCore.Publication.Busqueda.FiltrosPosibles.Empresa">
            FIltro de tipo empresa.
        </member>
        <member name="F:BotCore.Publication.Busqueda.FiltrosPosibles.Residuo">
            FIltro de tipo residuo.
        </member>
        <member name="F:BotCore.Publication.Busqueda.FiltrosPosibles.LugarRetiro">
            FIltro de donde se debe retirar.
        </member>
        <member name="F:BotCore.Publication.Busqueda.FiltrosPosibles.PrecioMaximo">
            FIltro del precio maximo dispuesto a pagar.
        </member>
        <member name="F:BotCore.Publication.Busqueda.FiltrosPosibles.FrecuenciaRestock">
            FIltro de de restock para publicaciones recurrentes.
        </member>
        <member name="M:BotCore.Publication.Busqueda.BuscarPublicaciones(System.Collections.Generic.Dictionary{BotCore.Publication.Busqueda.FiltrosPosibles,System.Object})">
            <summary>
            Servicio principal de la busqueda.
            </summary>
            <param name="PublicacionesASeparar">Un diccionario de clave un miembro del enum de FiltrosPosibles y valor la especificacion deseada (string o int)</param>
            <returns>Una List de publicaciones que cumplen las condiciones de PublicacionesASeparar.</returns>
        </member>
        <member name="T:BotCore.Publication.Reporte">
            <summary>
            Genera un reporte del historial de un <see iref ="IUsuario"/>, implementa la interfaz <see iref ="IPrintable"/>.
            </summary>
        </member>
        <member name="P:BotCore.Publication.Reporte.FechaInicio">
            <summary>
            Propiedad readonly de <see cref ="T:BotCore.Publication.Reporte"/>.
            </summary>
            <value>instancia de <see cref ="T:System.DateTime"/> </value>
        </member>
        <member name="P:BotCore.Publication.Reporte.FechaFin">
            <summary>
            Propiedad readonly de <see cref ="T:BotCore.Publication.Reporte"/>.
            </summary>
            <value>instancia de <see cref ="T:System.DateTime"/> </value>
        </member>
        <member name="P:BotCore.Publication.Reporte.Ventas">
            <summary>
            Propiedad readonly de <see cref ="T:BotCore.Publication.Reporte"/>.
            </summary>
            <value>Lista de instancias de <see cref ="T:ClassLibrary.Publication.Venta"/> </value>
        </member>
        <member name="P:BotCore.Publication.Reporte.Usuario">
            <summary>
            Propiedad readonly de <see cref ="T:BotCore.Publication.Reporte"/>.
            </summary>
            <value>instancia del tipo <see iref ="IUsuario"/> </value>
        </member>
        <member name="M:BotCore.Publication.Reporte.Generar(System.DateTime,System.DateTime,ClassLibrary.User.IUsuario)">
            <summary>
            Metodo estatico que genera una instancia de <see cref ="T:BotCore.Publication.Reporte"/> para el <see iref ="IUsuario"/> 
            especificado en un periodo de tiempo.
            </summary>
            <param name="fechaInicio"></param>
            <param name="fechaFin"></param>
            <param name="usuario"></param>
            <returns> <see cref ="T:BotCore.Publication.Reporte"/> </returns>
        </member>
        <member name="M:BotCore.Publication.Reporte.GetTextToPrint">
            <summary>
            Implementacion de <see iref ="IPrintable"/>.
            </summary>
            <returns>String</returns>
        </member>
        <member name="T:BotCore.User.Autenticacion">
            <summary>
            Esta clase se encarga de tomar datos para loggear una persona y verificar
            su informacion a la hora de iniciar sesión.
            </summary>
        </member>
        <member name="P:BotCore.User.Autenticacion.Instancia">
            <summary>
            Metodo de acceso al singleton.
            </summary>
            <value></value>
        </member>
        <member name="M:BotCore.User.Autenticacion.ValidarUsuario(System.String,System.String)">
            <summary>
            Metodo que toma colaboracion de <see cref = "T:Importers.DataAccess"/> para comprobar el inicio de 
            sesión.
            </summary>
            <param name="nombreUsuario"></param>
            <param name="contrasenia"></param>
            <returns><c>true</c> si nombreUsuario y contrasenia están viculados en 
            <see cref = "T:ClassLibrary.User.DatosLogin"/> en la base de datos.</returns>
        </member>
        <member name="T:BotCore.User.GestorInvitaciones">
            <summary>
            Clase que se encarga de generar usuarios temporales y
            enviarselo a personas para facilitar su registro
            de manera personal.
            </summary>
        </member>
        <member name="P:BotCore.User.GestorInvitaciones.Instancia">
            <summary>
            Metodo de acceso al singleton.
            </summary>
            <value></value>
        </member>
        <member name="F:BotCore.User.GestorInvitaciones.invitacionesEnviadas">
            <summary>
            Lista donde se almacenan las invitaciones enviadas para mantener un registro.
            </summary>
        </member>
        <member name="T:BotCore.User.Invitacion">
            <summary>
            Clase mediadora que representa la invitación en si, y encapsula el enlace y destino.
            </summary>
        </member>
        <member name="P:BotCore.User.Invitacion.OrganizacionInvitada">
            <summary>
            El usuario destinado, debería ser sobreescrito por el destinatario.
            </summary>
        </member>
        <member name="P:BotCore.User.Invitacion.Destinatario">
            <summary>
            Via de comunicacion para que llegue la invitacion (numero, mail, etc)
            </summary>
        </member>
        <member name="P:BotCore.User.Invitacion.Link">
            <summary>
            Código generado para validar la invitación.
            </summary>
        </member>
        <member name="P:BotCore.User.Invitacion.fueAceptada">
            <summary>
            Propiedad, permite evaluar si el destinatario aceptó la invitación
            y se registró.
            </summary>
        </member>
        <member name="T:BotCore.User.RegistroUsuario">
            <summary>
            Clase encargada de crear el usuario para inicio de sesión y su almacen en 
            <see cref = "T:Importers.DataAccess"/>.
            </summary>
        </member>
        <member name="M:BotCore.User.RegistroUsuario.RegistrarUsuario(System.String,System.String,ClassLibrary.User.IUsuario)">
            <summary>
            Método registrador de usuario.
            </summary>
            <param name="nombreUsuario"></param>
            <param name="contrasenia"></param>
            <param name="usuario"></param>
        </member>
    </members>
</doc>
